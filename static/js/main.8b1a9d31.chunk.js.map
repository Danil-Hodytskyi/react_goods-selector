{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","this","className","length","join","slice","type","onClick","setState","goodsFromServer","map","good","includes","filter","el","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAAe,G,YAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCCWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,4CAKE,WAAU,IAAD,OACCA,EAAkBC,KAAKF,MAAvBC,cAER,OACE,uBAAME,UAAU,MAAhB,UACE,yBAAQA,UAAU,2CAAlB,UACE,qBAAIA,UAAU,aAAd,WACIF,EAAcG,QAAU,oBACA,IAAzBH,EAAcG,QAAd,UAAiCH,EAAc,GAA/C,gBACyB,IAAzBA,EAAcG,QAAd,UAAiCH,EAAcI,KAAK,MAApD,iBACAJ,EAAcG,OAAS,GAAvB,UAA+BH,EAAcK,MAAM,GAAI,GAAGD,KAAK,MAA/D,gBAA4EJ,EAAcA,EAAcG,OAAS,GAAjH,oBAGFH,EAAcG,OAAS,GACtB,wBACEG,KAAK,SACLJ,UAAU,yCACVK,QAAS,WACP,EAAKC,SAAS,CAAER,cAAe,IAChC,EALH,sBAYJ,oBAAIE,UAAU,YAAd,SACGO,EAAgBC,KAAI,SAAAC,GACnB,OACE,qBAEET,UACGF,EAAcY,SAASD,GAEpB,qBADA,aAJR,UAQGA,EACAX,EAAcY,SAASD,GACtB,wBACEL,KAAK,SACLJ,UAAU,2CACVK,QAAS,WACP,EAAKC,SAAS,CACZR,cAAe,EAAKD,MAAMC,cACvBa,QAAO,SAAAC,GAAE,OAAIA,IAAOH,CAAX,KAEf,EARH,oBAeE,wBACEL,KAAK,SACLJ,UAAU,4CACVK,QAAS,WACP,EAAKC,SAAS,CACZR,cAAc,GAAD,mBAAMA,GAAN,CAAqBW,KAErC,EAPH,sBAxBCA,EAsCV,QAIR,KA7EH,GAAyBI,IAAMC,WCR/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.8b1a9d31.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","/* eslint-disable react/no-access-state-in-setstate */\nimport React from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[]\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header block breadcrumb is-centered\">\n          <h1 className=\"App__title\">\n            {!selectedGoods.length && 'No goods selected'}\n            {selectedGoods.length === 1 && `${selectedGoods[0]} is selected`}\n            {selectedGoods.length === 2 && `${selectedGoods.join(', ')} are selected`}\n            {selectedGoods.length > 2 && `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`}\n          </h1>\n\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger is-rounded\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul className=\"GoodsList\">\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                key={good}\n                className={\n                  !selectedGoods.includes(good)\n                    ? 'Good block'\n                    : 'Good--active block'\n                }\n              >\n                {good}\n                {selectedGoods.includes(good) ? (\n                  <button\n                    type=\"button\"\n                    className=\"Good--delete button is-danger is-rounded\"\n                    onClick={() => {\n                      this.setState({\n                        selectedGoods: this.state.selectedGoods\n                          .filter(el => el !== good),\n                      });\n                    }}\n                  >\n                    Delete\n                  </button>\n                )\n\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"Good--select button is-success is-rounded\"\n                      onClick={() => {\n                        this.setState({\n                          selectedGoods: [...selectedGoods, good],\n                        });\n                      }}\n                    >\n                      Select\n                    </button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}